server:
  port: 8082
  context-path: /web-app

spring:
  thymeleaf:
    cache: false
  security:
    oauth2:
      client:
        registration:
          login-client:
            provider: keycloak
            client-id: login-client
            client-authenticate-method: none
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope:
              - openid
              - profile
              - email
          client-micro-service-foo:
            provider: keycloak
            client-id: micro-service-foo
            client-secret: 66c4641e-8476-49f9-bcd3-2c029d2c000d
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/foos"
            scope:
              - foos:read
              - foos:write
        provider:
          keycloak:
            authorization-uri: http://localhost:8080/auth/realms/custom/protocol/openid-connect/auth
            token-uri: http://localhost:8080/auth/realms/custom/protocol/openid-connect/token
            user-info-uri: http://localhost:8080/auth/realms/custom/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8080/auth/realms/custom/protocol/openid-connect/certs
            user-name-attribute: preferred_username
oauth2:
  resource:
    services:
      client-micro-service-foo:
        uri: http://localhost:8081/foos